name: Build and Deploy to Google Compute Engine

on:
  push:
    branches:
    - sequelize # specify the branch you want the deploy to take place from

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GCE_INSTANCE: docker-instance-volume   # TODO: name your instance
  GCE_INSTANCE_ZONE: us-central1-a   # TODO: update to instance zone if needed
  SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }} # The service account user you created
  DB_PASS: ${{ secrets.DB_PASS }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_NAME: ${{ secrets.DB_NAME }}
  ENV_FILE: ${{ secrets.ENV_FILE }} # Secret with all additional environment variables.
  SERVER_PORT: 8080 # the port your server is running on

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        version: '290.0.1' # optional, if not provided -> resolves to latest version
        service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        project_id: ${{ secrets.PROJECT_ID }}    

    # Helper for authentication
    - name: Configure Docker to use gcloud command-line
      run: gcloud --quiet auth configure-docker

    # Create a new instance -> MARK IT OUT AFTER FIRST DEPLOY
    - name: Create Instance #for first time setup
      run: make create

    # Create Rule To allow access to the port your app is running on.

    # ONLY INCLUDE if it doesnt already exist for SERVER_PORT !!
    # - name: Create Firewall Rule
    #   run: make create-firewall-rule

    # Install Dependencies (So the Docker Image Has The Latest Client Version)
    - name: Install dependencies
      run: npm ci --only=production
      working-directory: ./songclient

    # Build production build (So the Docker Image Has The Latest Build Version)
    - name: Create production build
      run: CI=false INLINE_RUNTIME_CHUNK=false npm run build
      working-directory: ./songclient

    # Enable When using ENV_FILE Secret
    - name: Create .env file from Secret
      run: |
        file=".env"
        echo "$ENV_FILE" > $file

    # Enable When using ENV_FILE Secret
    - name: Send .env File
      run: gcloud compute scp .env --zone $GCE_INSTANCE_ZONE $GCE_INSTANCE:~

    # Build the Docker image
    - name: Build image
      run: make build

    # Push the Docker image to Google Container Registry
    - name: Publish image
      run: make push

    # ONLY first time setup
    # Initialize Envoironment in Gcloud Instance
    - name: Initialize volumes, network and database
      run: make initialize
      
    # Deploy Container to Gcloud Instance
    - name: deploy
      run: make deploy

    # Enable When using ENV_FILE Secret
    - name: Remove .env File
      run: make remove-env