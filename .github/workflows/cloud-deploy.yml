name: Build and Deploy to Google Compute Engine

on:
  push:
    branches:
    - sequelize

env:
  PROJECT_ID: ${{ secrets.RUN_PROJECT }}
  GCP_ID: ${{ secrets.RUN_PROJECT }}
  GCE_INSTANCE: instance-testing12  # TODO: update to instance name
  GCE_INSTANCE_ZONE: us-central1-a   # TODO: update to instance zone
  SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
  SERVICE_USER: ${{ secrets.SERVICE_USER }}
  DB_PASS: ${{ secrets.DB_PASS }}
  USER: ${{ secrets.USER }}
  GCE_HOST: ${{ secrets.DB_HOST }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        project_id: ${{ secrets.RUN_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # - name: Install dependencies
    #   run: npm ci
    #   working-directory: ./songclient
    # # Build production build 
    # - name: Build songclient
    #   run: CI=false npm run build
    #   working-directory: ./songclient

    # Build the Docker image
    # - name: Build
    #   run: |-
    #     docker build --tag "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA" .
    # # Push the Docker image to Google Container Registry
    # - name: Publish Image
    #   run: |-
    #     docker push "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA"

    - name: Create Instance
      run: |-
        gcloud compute instances create "$GCE_INSTANCE" \
        --zone "$GCE_INSTANCE_ZONE" \
        --service-account "$SERVICE_ACCOUNT" \
        --tags http-server \
        --machine-type e2-medium

    #     --address 34.19.193.89 \

    - name: Clone and Initialize
      run: |-
        gcloud compute ssh \
        --zone "$GCE_INSTANCE_ZONE" "$GCE_INSTANCE" --command '
          sudo apt-get -y update &&
          sudo apt install -y git &&
          sudo apt install -y npm &&
          sudo git clone http://github.com/${{github.repository}} &&
          cd ${{ github.event.repository.name }} &&
          sudo git fetch --all &&
          sudo git checkout sequelize
        '

    # - name: Copy build
    #   run: |-
    #     gcloud compute scp --project="$PROJECT_ID"  --zone="$GCE_INSTANCE_ZONE" --recurse ./build/ $SERVICE_USER@$GCE_INSTANCE:~/${{ github.event.repository.name }}/songclient

      # gcloud compute ssh \
      # --zone "$GCE_INSTANCE_ZONE" "$GCE_INSTANCE" --command '
      #  gcloud compute scp --zone "$GCE_INSTANCE_ZONE" ./build $USER@$GCE_INSTANCE:~/${{ github.event.repository.name }}/songclient
      # working-directory: ./songclient


    - name: Pull Origin Branch, Install Dependecies
      run: |-
        gcloud compute ssh \
        --zone "$GCE_INSTANCE_ZONE" "$GCE_INSTANCE" --command '
          cd ${{ github.event.repository.name }} &&
          sudo git stash &&
          sudo git pull origin &&
          cd ./songclient && sudo npm ci --production &&
          sudo npm run build && 
          cd ../server &&
          sudo npm ci --production
          sudo sh createenv.sh $DB_PASS
        '
    - name: Create MySql
      run: |-
        gcloud compute ssh \
        --zone "$GCE_INSTANCE_ZONE" "$GCE_INSTANCE" --command '
          cd ${{ github.event.repository.name }} &&
          sudo apt-get -y install default-mysql-server &&
          echo "dbpass: $DB_PASS" &&
          sh mysqlscript.sh $DB_PASS &&
          sudo sh mysqlconfig.sh $DB_PASS
        '
    #      sudo mysql < mysqlconfig.txt
    # - name: Configure MySql
    #   run: |-
    #     gcloud compute ssh \
    #     --zone "$GCE_INSTANCE_ZONE" "$GCE_INSTANCE" --command '
    #       cd ${{ github.event.repository.name }} &&
    #       sudo mysql -u root #
    #     '
      #    DB_PASS=$DB_PASS sh mysqlscript.sh 
      # sudo apt-get -y install default-mysql-server &&
      # sudo mysql -u root # &&
      # USE mysql; &&
      # UPDATE user SET plugin='mysql_native_password' WHERE User='root'; &&
      # FLUSH PRIVILEGES; &&
      # exit;
      #    cd ./songclient && sudo npm ci --production &&
      #    sudo npm run build && 
      # DB_PASS=$DB_PASS sh mysqlscript.sh
      # sudo npm install pm2@latest -g
      #  && sudo apt-get -y install default-mysql-server &&
      #  npm run migrate


    #   # Build the Docker image
    # - name: Build
    #   run: |-
    #     make build
    # # Push the Docker image to Google Container Registry
    # - name: Publish
    #   run: |-
    #     make push

    # - name: Create Instance with Container
    #   run: |-
    #     gcloud compute instances create-with-container "$GCE_INSTANCE" \
    #     --container-image "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA" \
    #     --image-project cos-cloud \
    #     --image cos-stable-85-13310-1041-28 \
    #     --zone "$GCE_INSTANCE_ZONE" \
    #     --service-account "$SERVICE_ACCOUNT" \
    #     --tags http-server \
    #     --machine-type e2-medium

    # - name: Build-migrate
    #   run: |-
    #     make build-migrate
    # # Push the Docker image to Google Container Registry
    # - name: Publish-migrate
    #   run: |-
    #     make push-migrate

    # - name: Deploy to containerized instance
    #   run: |-
    #     gcloud compute instances update-container "$GCE_INSTANCE" \
    #       --zone "$GCE_INSTANCE_ZONE" \
    #       --container-image "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA" \
    #       --container-env=[DB_HOST=$GCE_HOST,DB_PASSWORD=${{secrets.DB_PASS}}]

    # - name: Connect With SSH start mysql and migrate
    #   run: |-
    #     gcloud compute ssh \
    #     --zone "$GCE_INSTANCE_ZONE" "$GCE_INSTANCE"
    #     docker run --name mysql -e MYSQL_ROOT_PASSWORD=$DB_PASS -d mysql:latest &&
    #     docker restart mysql &&
    #     docker run --name migrate -d gcr.io/$PROJECT_ID/$GCE_INSTANCE-migrate-image:2a660a6540756e47f886a5d1b6681d97ad316171 --rm
        
    # - name: Initialize sql
    #   run: make sql-init
    # - name: restart sql
    #   run: make restart-sql
    # - name: run migrations
    #   run: make migrate



    # - name: Deploy2
    #   run: |-
    #     gcloud --quiet compute ssh --zone us-central1-a instance-1 --command '
    #       sudo docker restart mysql &&
    #       sudo docker run -d --name="gcr.io/$PROJECT_ID/$GCE_INSTANCE-migrate-image:$GITHUB_SHA"

    # - name: Create Instance with Container
    #   run: |-
    #     gcloud compute instances create-with-container "$GCE_INSTANCE" \
    #     --container-image "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA" \
    #     --image-project cos-cloud \
    #     --image cos-stable-85-13310-1041-28 \
    #     --zone "$GCE_INSTANCE_ZONE" \
    #     --address 35.184.40.237 \
    #     --service-account "$SERVICE_ACCOUNT" \
    #     --tags http-server \
    #     --machine-type e2-medium
    # - name: Deploy
    #   run: |-
    #     make deploy


    # - name: Create Instance
    #   run: |-
    #     gcloud compute instances create "$GCE_INSTANCE" \
    #     --zone "$GCE_INSTANCE_ZONE" \
    #     --service-account "$SERVICE_ACCOUNT" \
    #     --tags http-server \
    #     --machine-type e2-medium

        # --image cos-dev-88-15480-0-0 \
        # --image-project cos-cloud \
      #  --container-image "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA" \
      #  --image-project "$PROJECT_ID" \
    # - name: Add Firewall Rules
    #   run: |-
    #     gcloud compute firewall-rules create default-allow-http-5000 \
    #     --allow tcp:5000 \
    #     --source-ranges 0.0.0.0/0 \
    #     --target-tags http-server \
    #     --description "Allow port 5000 access to http-server"
    # - name: Deploy
    #   run: |-
    #     gcloud compute instances update-container "$GCE_INSTANCE" \
    #       --zone "$GCE_INSTANCE_ZONE" \
    #       --container-image "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA"


    # - name: Connect With SSH
    #   run: |-
    #     gcloud compute ssh \
    #     --zone "$GCE_INSTANCE_ZONE" "$GCE_INSTANCE" 
    #     sudo apt-get update &&
    #     sudo apt install git &&
    #     sudo apt install npm &&
    #     sudo git clone http://github.com/${{github.repository}} &&
    #     cd ./songclient && sudo npm ci --production &&
    #     sudo npm run build && cd ../server &&
    #     npm ci --production &&
    #     sudo apt-get -y install default-mysql-server &&
    #     npm run migrate



    # - name: Initialize Instance
    #   run: |- 
    #     sudo apt-get update &&
    #     sudo apt install git &&
    #     sudo apt-get -y install mysql-server &&
    #     sudo apt install npm &&
    #     sudo git clone http://github.com/${{github.repository}}
    # - name: Install dependencies and build
    #   run: |-
    #     sudo npm ci --production &&
    #     sudo npm run build 
    #   working-directory: ./songclient
    # - name: Install server dependencies
    #   run: |-
    #     npm ci --production 
    #   working-directory: ./server



