name: Build and Deploy to Google Compute Engine

on:
  push:
    branches:
    - sequelize

env:
  PROJECT_ID: ${{ secrets.RUN_PROJECT }}
  GCE_INSTANCE: instance-1  # TODO: update to instance name
  GCE_INSTANCE_ZONE: us-central1-a   # TODO: update to instance zone
  SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        project_id: ${{ secrets.RUN_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    - name: Install dependencies
      run: npm ci
      working-directory: ./songclient
    # Build production build so docker will have an up to date image
    - name: Build songclient
      run: CI=false npm run build
      working-directory: ./songclient
    # Build the Docker image
    - name: Build
      run: |-
        docker build --tag "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA" .
    # Push the Docker image to Google Container Registry
    - name: Publish Image
      run: |-
        docker push "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA"
    - name: Create Instance
      run: |-
        gcloud compute instances create-with-container "$GCE_INSTANCE" \
        --container-image "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA" \
        --image-project "$PROJECT_ID" \
        --zone "$GCE_INSTANCE_ZONE" \
        --service-account "$SERVICE_ACCOUNT" \
        --tags http-server \
        --machine-type e2-medium
    - name: Add Firewall Rules
      run: |-
        gcloud compute firewall-rules create default-allow-http-5000 \
        --allow tcp:5000 \
        --source-ranges 0.0.0.0/0 \
        --target-tags http-server \
        --description "Allow port 5000 access to http-server"

    # - name: Deploy
    #   run: |-
    #     gcloud compute instances update-container "$GCE_INSTANCE" \
    #       --zone "$GCE_INSTANCE_ZONE" \
    #       --container-image "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA"

