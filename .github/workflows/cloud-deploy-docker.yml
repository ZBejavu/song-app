name: Build and Deploy to Google Compute Engine

on:
  push:
    branches:
    - sequelize

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GCE_INSTANCE: instance-docker   # TODO: name your instance
  GCE_INSTANCE_ZONE: us-central1-a   # TODO: update to instance zone if needed
  SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }} # The service account user you created
  DB_PASS: ${{ secrets.DB_PASS }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_NAME: ${{ secrets.DB_NAME }}
  SERVER_PORT: 8080 # the port your server is running on
  # SECRET_NAME: ${{ secrets.SECRET_NAME}} # ADD all additional Secrets Here

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    # Setup gcloud CLI

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        version: '290.0.1' # optional, if not provided -> resolves to latest version
        service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        project_id: ${{ secrets.PROJECT_ID }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    - name: Create Instance #for first time setup
      run: make create

    # - name: Create Firewall Rule #include only if it doesnt already exist
    #   run: make create-firewall-rule

    - name: Install dependencies
      run: npm ci --only=production
      working-directory: ./songclient

    # Build production build 
    - name: Create production build
      run: CI=false INLINE_RUNTIME_CHUNK=false npm run build
      working-directory: ./songclient

    # Build the Docker image
    - name: Build image
      run: make build

    # Push the Docker image to Google Container Registry
    - name: Publish image
      run: make push
      
    - name: deploy
      run: make deploy


